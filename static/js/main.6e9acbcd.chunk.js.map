{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pages","Math","ceil","className","cn","disabled","href","onClick","map","page","active","length","items","App","useState","setPage","limit","setLimit","min","id","defaultValue","onChange","event","Number","target","value","htmlFor","limits","array","i","getPages","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCuEMG,EAnE+B,SAAC,GAKxC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAQX,EAAW,EAAGY,KAAKC,KAAKN,EAAQC,IAc9C,OACE,qBAAIM,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAG,YAAa,CAAEC,SAA0B,IAAhBP,IADzC,SAGE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBR,EAAoB,OAAS,QAC5CS,QAhBmB,WACrBT,EAAc,GAChBC,EAAaD,EAAc,IASzB,oBAUDE,EAAMQ,KAAI,SAAAC,GAAI,OACb,oBACEN,UAAWC,IAAG,YAAa,CAAEM,OAAQD,IAASX,IADhD,SAIE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMR,EAAaU,IAJ9B,SAMGA,KAREA,MAYT,oBACEN,UAAWC,IAAG,YAAa,CAAEC,SAAUP,IAAgBE,EAAMW,SAD/D,SAGE,mBACE,UAAQ,WACRR,UAAU,YACVG,KAAK,QACL,gBAAeR,IAAgBE,EAAMW,OAAS,OAAS,QACvDJ,QAlDe,WACjBT,EAAcE,EAAMW,QACtBZ,EAAaD,EAAc,IA2CzB,wBCzDFc,EAAQvB,EAAW,EAAG,IACzBmB,KAAI,SAAAf,GAAC,qBAAYA,MAEPoB,EAAgB,WAC3B,MAAwBC,mBAAS,GAAjC,mBAAOL,EAAP,KAAaM,EAAb,KACA,EAA0BD,mBAAS,GAAnC,mBAAOE,EAAP,KAAcC,EAAd,KAaA,OACE,sBAAKd,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWM,EADX,oBAC2BA,EAAO,GAAKO,EAAQ,EAD/C,cACsDf,KAAKiB,IAAIT,EAAOO,EAAOJ,EAAMD,QADnF,eACiGC,EAAMD,OADvG,OAIA,sBAAKR,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRgB,GAAG,kBACHhB,UAAU,eACViB,aAAa,IACbC,SAAU,SAACC,GAAD,OAAWL,EAASM,OAAOD,EAAME,OAAOC,SALpD,UAOE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkBvB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEL,YAAaW,EACbZ,QAASmB,EACTpB,MAAOgB,EAAMD,OACbZ,aAAcgB,IAEhB,6BA9Ca,WAIf,IAJ4E,IAA5Df,EAA2D,uDAA3CS,EAAMkB,EAAqC,uDAApBX,EACjDY,EAAQ,GAGLC,GAAK7B,EAAQ,GAAK2B,EAAQE,EAAK7B,EAAQ2B,EAASE,IACvDD,EAAMlC,KAAKkB,EAAMiB,IAGnB,OAAOD,EAuCFE,CAASrB,EAAMO,GAAOR,KAAI,SAAAuB,GAAI,OAC7B,oBAAI,UAAQ,QAAZ,SAAqBA,aC3D/BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.6e9acbcd.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface PaginationProps {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n}\n\nconst Pagination: React.FC<PaginationProps> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pages = getNumbers(1, Math.ceil(total / perPage));\n\n  const handleNextPage = () => {\n    if (currentPage < pages.length) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const handlePreviousPage = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn('page-item', { disabled: currentPage === 1 })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1 ? 'true' : 'false'}\n          onClick={handlePreviousPage}\n        >\n          «\n        </a>\n      </li>\n      {pages.map(page => (\n        <li\n          className={cn('page-item', { active: page === currentPage })}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li\n        className={cn('page-item', { disabled: currentPage === pages.length })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pages.length ? 'true' : 'false'}\n          onClick={handleNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n\nexport default Pagination;\n","/* eslint-disable react/button-has-type */\nimport React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport Pagination from './components/Pagination/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [page, setPage] = useState(1);\n  const [limit, setLimit] = useState(5);\n\n  const getPages = (pages: number = page, limits: number = limit): string[] => {\n    const array = [];\n\n    // eslint-disable-next-line no-plusplus\n    for (let i = (pages - 1) * limits; i < (pages * limits); i++) {\n      array.push(items[i]);\n    }\n\n    return array;\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (Items ${(page - 1) * limit + 1} - ${Math.min(page * limit, items.length)} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue=\"5\"\n            onChange={(event) => setLimit(Number(event.target.value))}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        currentPage={page}\n        perPage={limit}\n        total={items.length}\n        onPageChange={setPage}\n      />\n      <ul>\n        {getPages(page, limit).map(item => (\n          <li data-cy=\"items\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}